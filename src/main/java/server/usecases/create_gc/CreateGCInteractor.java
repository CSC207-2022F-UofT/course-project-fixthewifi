package server.usecases.create_gc;

import server.entities.GroupChat;
import server.entities.User;

import java.util.ArrayList;

/**
 * This class is the interactor for the usecase responsible for where the users'
 * selected friends from their FriendsList are taken and a
 * GroupChat is created with them as the members.
 * @author Brenden McFarlane
 */
public class CreateGCInteractor implements CreateGCInputBoundary {

    private final CreateGCDBGateway database;

    private final CreateGCOutputBoundary output_adapter;

    public CreateGCInteractor(CreateGCDBGateway database, CreateGCOutputBoundary output_adapter){
        this.database = database;
        this.output_adapter = output_adapter;
    }

    /**
     * Creates a new GroupChat, adds it to the database, and informs the CreateGCOutputAdapter of its success.
     *
     * <p>The new GroupChat will have the admin and members from input_data, and the UID will be a new, unique UID
     * generated by database. The output adapter will be called once for the admin, and once again for
     * every member.
     *
     * @param input_data contains List<User> of those to be added as members of the GroupChat.
     */
    @Override
    public void create(CreateGCInputData input_data) {
        //access database
        int chat_uid = this.database.getNewUID();
        User admin = database.getUserByUID(input_data.getAdmin_uid());
        ArrayList<User> members = new ArrayList<>();
        members.add(database.getUserByUID(input_data.getAdmin_uid()));
        for (int i: input_data.getMembers_uids()) {
            if(database.getUserByUID(i) != null && !members.contains(database.getUserByUID(i))){
                members.add(database.getUserByUID(i));
            }
        }
        //create gc and add to database
        GroupChat gc = new GroupChat(chat_uid, admin, members);
        database.addGC(gc);
        //call output boundary for admin and members
        for(User u : members){
            int peerPort = database.getPeerPortFromUID(u.getUid());
            String peerID = database.getPeerIDFromUID(u.getUid());
            CreateGCOutputData output = new CreateGCOutputData(
                    chat_uid, input_data.getAdmin_uid(), peerID, peerPort, input_data.getMembers_uids());
            output_adapter.prepareSuccessView(output);
        }

    }
}
